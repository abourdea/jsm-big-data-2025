{
  "hash": "0243128f9448b7123f75dcf42c9b03b2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Welcome!\"\nformat: \n  revealjs:\n    footer: \"[JSM: Large Data](https://github.com/kbodwin/jsm-large-data)\"\n    theme: simple\n    scrollable: true\n    embed-resources: true\neditor: source\n---\n\n\n\n\n\n# Who are we? {background-color=\"#0F4C81\"}\n\n## Jonathan Keane\n\n::::{.columns}\n\n::: {.column width=\"30%\"}\n\n![](./images/jon.png){style=\"height: 300px;\"}\n:::\n\n::: {.column width=\"70%\"}\n\n- Engineering leader at Posit, PBC.\n\n- 15+ years building data tools in R and Python for scientific computing.\n\n- PMC member and maintainer of Apache Arrow; author of `dittodb`\n\n- Experienced with large-scale data analysis, modeling, and enterprise tools  \n\n:::\n\n::::\n\n## Tyson Barrett\n\n::::{.columns}\n\n::: {.column width=\"30%\"}\n\n\n![](./images/tyson-headshot-rounded.png){style=\"height: 300px;\"}\n\n:::\n\n::: {.column width=\"70%\"}\n\n- Applied statistician at Highmark Health and Utah State University  \n- 15+ years of R programming and package development experience \n\n- Maintainer of `data.table` and 3 other R packages  \n\n- Consultant on NSF grant supporting `data.table` infrastructure \n\n- Works with large datasets (millions of rows, hundreds of columns)\n\n\n:::\n\n::::\n\n## Kelly Bodwin\n\n::::{.columns}\n\n::: {.column width=\"30%\"}\n\n\n![](./images/kelly-headshot.png){style=\"height: 300px;\"}\n\n:::\n\n::: {.column width=\"70%\"}\n- Associate Professor of Statistics and Data Science at Cal Poly\n\n- Co-author of R packages `flair` and `tidyclust`  \n\n- Consultant on NSF grant supporting `data.table` infrastructure\n\n- Research experience with high-volume, in-memory data\n\n\n:::\n\n::::\n\n\n# Setup {background-color=\"#0F4C81\"}\n\n## Setup\n\n:::{.incremental}\n\n* Make sure you have the [most recent version of R](https://cran.r-project.org/src/base/R-4).  (*Recommended minimum: R4.0*)\n\n* Make sure you have the [most recent version of RStudio](https://posit.co/download/rstudio-desktop/).  (*Recommended minimum: 2025 release.*)\n\n* (Positron is probably fine, but we haven't stress-tested that.)\n\n* *(Optional)* [Download all workshop materials.](https://github.com/kbodwin/jsm-big-data-2025/tree/main/materials)\n\n:::\n\n# Install some packages {background-color=\"#0F4C81\"}\n\n## Installs\n\n(Also available as \"installs.R\" in the workshop materials repository.)\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n# Get the Data {background-color=\"#0F4C81\"}\n\n##  Easiest, quickest option\n\n[Download a subset of the data](https://github.com/arrowrbook/book/releases/download/PUMS_subset/PUMS.subset.zip)\n\n* This subset only includes the person-level data for years 2005, 2018, 2021 and only for states Alaska, Alabama, Arkansas, Arizona, California, Washington, Wisconsin, West Virginia, and Wyoming.\n\n* Simply download it and unzip it into a directory called data in your working directory and you can run the examples in the workshop.\n\n## Longer, but full dataset option\n\nWe also host a full version of the dataset in AWS S3.\n\nOnce you have setup your [AWS account and CLI](https://docs.aws.amazon.com/cli/latest/userguide/getting-started-quickstart.html), download the data into a data directory to use:\n\n```\naws s3 cp --recursive s3://scaling-arrow-pums/ ./data/\n```\n\nThis is the full dataset, but does require that you setup your AWS CLI and wait for the dataset to be downloaded.\n\n\n\n\n# The Public Access Microdata dataset {background-color=\"#0F4C81\"}\n\n## About the data\n\n:::{.incremental}\n* Collected by the United States Census Bureau as part of the American Community Survey\n* Disclosure protection ‚Äî introduces noise to make it impossible to identify specific people or households\n* Covers: 2005--2022 using the 1-year estimates (sans 2020; COVID)\n* Split into **person** and **household**\n    * columns: person: 230, household: 188 \n    * rows: person: 53M, household: 25M\n:::\n\n## A few example variables\n\n:::{.incremental}\n* Person\n  * Language spoken at home (LANP)\n  * Travel time to work (JWMNP) \n* Household\n  * Access to internat (ACCESS)\n  * Monthly rent (RNTP)\n* Weights üòµ‚Äçüí´\n  * PWGTP and WGTP for weights\n:::\n\n## Format of the data\n\n:::{.incremental}\n* Released and available as CSV files (~90GB)\n* Uses survey-style coding \n::: \n\n. . .\n\n\nFor this workshop:\n\n:::{.incremental}\n* Recoded the dataset \n* Saved as parquet (~12GB) partitioned by year and state\n:::\n\n:::{.notes}\nsurvey-style coding is where categorical variables will be given a number and there is a separate look up table for the values. Additionally, there are frequently sentinel values that mean missing or \"99 and greater\"\n\nWe have pulled the key into the actual data so you don't need to do the lookups and also converted numeric columns into integers, floats, etc. where appropriate.\n:::\n\n## Can I analyze all of PUMS?\n\n::: {.fragment style=\"margin-bottom: 2em; margin-top: 2em;\"}\nMost analysis of PUMS data starts with subsetting the data. Either by state (or even smaller) or year and often both.\n:::\n\n\n::: {.fragment style=\"margin-bottom: 2em; margin-top: 2em;\"}\nBut with the tools we learn about in this workshop, we actually can analyze the whole dataset.\n:::\n\n\n## Caveat\n\n::: {.v-center-container style=\"font-size: 1.25em;\"}\nThough we have not _purposefully_ altered this data, this data **should not be relied on** to be a perfect or even possibly accurate representation of the official PUMS dataset. \n:::\n\n# Goals {background-color=\"#0F4C81\"}\n\n## Goals of this Workshop\n\n:::{.incremental}\n\n1. Help you navigate **when** you need a speed-up trick and **which** tools will help you.\n\n2. Get you off the ground using `data.table` for **faster operations** on large data **fully in R**.\n\n3. Show you how to set up a **duckdb database** and use `arrow` and `duckplyr` to **partition** your analysis.\n\n4. Give you tools for a **unified workflow** of these tools.\n\n:::\n\n\n# Where are you from, what do you work on, and how do you hope this workshop will be useful to you? {background-color=\"#0F4C81\"}",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}